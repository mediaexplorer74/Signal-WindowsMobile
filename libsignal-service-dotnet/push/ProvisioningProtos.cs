// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Provisioning.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace libsignalservice.push {

  /// <summary>Holder for reflection information generated from Provisioning.proto</summary>
  public static partial class ProvisioningReflection {

    #region Descriptor
    /// <summary>File descriptor for Provisioning.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProvisioningReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJQcm92aXNpb25pbmcucHJvdG8SCnRleHRzZWN1cmUiIAoQUHJvdmlzaW9u",
            "aW5nVXVpZBIMCgR1dWlkGAEgASgJIjQKEVByb3Zpc2lvbkVudmVsb3BlEhEK",
            "CXB1YmxpY0tleRgBIAEoDBIMCgRib2R5GAIgASgMIrABChBQcm92aXNpb25N",
            "ZXNzYWdlEhkKEWlkZW50aXR5S2V5UHVibGljGAEgASgMEhoKEmlkZW50aXR5",
            "S2V5UHJpdmF0ZRgCIAEoDBIOCgZudW1iZXIYAyABKAkSGAoQcHJvdmlzaW9u",
            "aW5nQ29kZRgEIAEoCRIRCgl1c2VyQWdlbnQYBSABKAkSEgoKcHJvZmlsZUtl",
            "eRgGIAEoDBIUCgxyZWFkUmVjZWlwdHMYByABKAhCWQorb3JnLndoaXNwZXJz",
            "eXN0ZW1zLnRleHRzZWN1cmUuaW50ZXJuYWwucHVzaEISUHJvdmlzaW9uaW5n",
            "UHJvdG9zqgIVbGlic2lnbmFsc2VydmljZS5wdXNo"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.ProvisioningUuid), global::libsignalservice.push.ProvisioningUuid.Parser, new[]{ "Uuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.ProvisionEnvelope), global::libsignalservice.push.ProvisionEnvelope.Parser, new[]{ "PublicKey", "Body" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.push.ProvisionMessage), global::libsignalservice.push.ProvisionMessage.Parser, new[]{ "IdentityKeyPublic", "IdentityKeyPrivate", "Number", "ProvisioningCode", "UserAgent", "ProfileKey", "ReadReceipts" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProvisioningUuid : pb::IMessage<ProvisioningUuid> {
    private static readonly pb::MessageParser<ProvisioningUuid> _parser = new pb::MessageParser<ProvisioningUuid>(() => new ProvisioningUuid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProvisioningUuid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.ProvisioningReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProvisioningUuid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProvisioningUuid(ProvisioningUuid other) : this() {
      uuid_ = other.uuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProvisioningUuid Clone() {
      return new ProvisioningUuid(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private readonly static string UuidDefaultValue = "";

    private string uuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_ ?? UuidDefaultValue; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUuid {
      get { return uuid_ != null; }
    }
    /// <summary>Clears the value of the "uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUuid() {
      uuid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProvisioningUuid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProvisioningUuid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUuid) hash ^= Uuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUuid) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProvisioningUuid other) {
      if (other == null) {
        return;
      }
      if (other.HasUuid) {
        Uuid = other.Uuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProvisionEnvelope : pb::IMessage<ProvisionEnvelope> {
    private static readonly pb::MessageParser<ProvisionEnvelope> _parser = new pb::MessageParser<ProvisionEnvelope>(() => new ProvisionEnvelope());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProvisionEnvelope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.ProvisioningReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProvisionEnvelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProvisionEnvelope(ProvisionEnvelope other) : this() {
      publicKey_ = other.publicKey_;
      body_ = other.body_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProvisionEnvelope Clone() {
      return new ProvisionEnvelope(this);
    }

    /// <summary>Field number for the "publicKey" field.</summary>
    public const int PublicKeyFieldNumber = 1;
    private readonly static pb::ByteString PublicKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString publicKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PublicKey {
      get { return publicKey_ ?? PublicKeyDefaultValue; }
      set {
        publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "publicKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPublicKey {
      get { return publicKey_ != null; }
    }
    /// <summary>Clears the value of the "publicKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPublicKey() {
      publicKey_ = null;
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 2;
    private readonly static pb::ByteString BodyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString body_;
    /// <summary>
    /// Encrypted ProvisionMessage
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_ ?? BodyDefaultValue; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "body" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBody {
      get { return body_ != null; }
    }
    /// <summary>Clears the value of the "body" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBody() {
      body_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProvisionEnvelope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProvisionEnvelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PublicKey != other.PublicKey) return false;
      if (Body != other.Body) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPublicKey) hash ^= PublicKey.GetHashCode();
      if (HasBody) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPublicKey) {
        output.WriteRawTag(10);
        output.WriteBytes(PublicKey);
      }
      if (HasBody) {
        output.WriteRawTag(18);
        output.WriteBytes(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPublicKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PublicKey);
      }
      if (HasBody) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProvisionEnvelope other) {
      if (other == null) {
        return;
      }
      if (other.HasPublicKey) {
        PublicKey = other.PublicKey;
      }
      if (other.HasBody) {
        Body = other.Body;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PublicKey = input.ReadBytes();
            break;
          }
          case 18: {
            Body = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProvisionMessage : pb::IMessage<ProvisionMessage> {
    private static readonly pb::MessageParser<ProvisionMessage> _parser = new pb::MessageParser<ProvisionMessage>(() => new ProvisionMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProvisionMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.push.ProvisioningReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProvisionMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProvisionMessage(ProvisionMessage other) : this() {
      _hasBits0 = other._hasBits0;
      identityKeyPublic_ = other.identityKeyPublic_;
      identityKeyPrivate_ = other.identityKeyPrivate_;
      number_ = other.number_;
      provisioningCode_ = other.provisioningCode_;
      userAgent_ = other.userAgent_;
      profileKey_ = other.profileKey_;
      readReceipts_ = other.readReceipts_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProvisionMessage Clone() {
      return new ProvisionMessage(this);
    }

    /// <summary>Field number for the "identityKeyPublic" field.</summary>
    public const int IdentityKeyPublicFieldNumber = 1;
    private readonly static pb::ByteString IdentityKeyPublicDefaultValue = pb::ByteString.Empty;

    private pb::ByteString identityKeyPublic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString IdentityKeyPublic {
      get { return identityKeyPublic_ ?? IdentityKeyPublicDefaultValue; }
      set {
        identityKeyPublic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "identityKeyPublic" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIdentityKeyPublic {
      get { return identityKeyPublic_ != null; }
    }
    /// <summary>Clears the value of the "identityKeyPublic" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdentityKeyPublic() {
      identityKeyPublic_ = null;
    }

    /// <summary>Field number for the "identityKeyPrivate" field.</summary>
    public const int IdentityKeyPrivateFieldNumber = 2;
    private readonly static pb::ByteString IdentityKeyPrivateDefaultValue = pb::ByteString.Empty;

    private pb::ByteString identityKeyPrivate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString IdentityKeyPrivate {
      get { return identityKeyPrivate_ ?? IdentityKeyPrivateDefaultValue; }
      set {
        identityKeyPrivate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "identityKeyPrivate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIdentityKeyPrivate {
      get { return identityKeyPrivate_ != null; }
    }
    /// <summary>Clears the value of the "identityKeyPrivate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdentityKeyPrivate() {
      identityKeyPrivate_ = null;
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 3;
    private readonly static string NumberDefaultValue = "";

    private string number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Number {
      get { return number_ ?? NumberDefaultValue; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNumber {
      get { return number_ != null; }
    }
    /// <summary>Clears the value of the "number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNumber() {
      number_ = null;
    }

    /// <summary>Field number for the "provisioningCode" field.</summary>
    public const int ProvisioningCodeFieldNumber = 4;
    private readonly static string ProvisioningCodeDefaultValue = "";

    private string provisioningCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProvisioningCode {
      get { return provisioningCode_ ?? ProvisioningCodeDefaultValue; }
      set {
        provisioningCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "provisioningCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProvisioningCode {
      get { return provisioningCode_ != null; }
    }
    /// <summary>Clears the value of the "provisioningCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProvisioningCode() {
      provisioningCode_ = null;
    }

    /// <summary>Field number for the "userAgent" field.</summary>
    public const int UserAgentFieldNumber = 5;
    private readonly static string UserAgentDefaultValue = "";

    private string userAgent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserAgent {
      get { return userAgent_ ?? UserAgentDefaultValue; }
      set {
        userAgent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userAgent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserAgent {
      get { return userAgent_ != null; }
    }
    /// <summary>Clears the value of the "userAgent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserAgent() {
      userAgent_ = null;
    }

    /// <summary>Field number for the "profileKey" field.</summary>
    public const int ProfileKeyFieldNumber = 6;
    private readonly static pb::ByteString ProfileKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString profileKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ProfileKey {
      get { return profileKey_ ?? ProfileKeyDefaultValue; }
      set {
        profileKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "profileKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProfileKey {
      get { return profileKey_ != null; }
    }
    /// <summary>Clears the value of the "profileKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProfileKey() {
      profileKey_ = null;
    }

    /// <summary>Field number for the "readReceipts" field.</summary>
    public const int ReadReceiptsFieldNumber = 7;
    private readonly static bool ReadReceiptsDefaultValue = false;

    private bool readReceipts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReadReceipts {
      get { if ((_hasBits0 & 1) != 0) { return readReceipts_; } else { return ReadReceiptsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        readReceipts_ = value;
      }
    }
    /// <summary>Gets whether the "readReceipts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReadReceipts {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "readReceipts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReadReceipts() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProvisionMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProvisionMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdentityKeyPublic != other.IdentityKeyPublic) return false;
      if (IdentityKeyPrivate != other.IdentityKeyPrivate) return false;
      if (Number != other.Number) return false;
      if (ProvisioningCode != other.ProvisioningCode) return false;
      if (UserAgent != other.UserAgent) return false;
      if (ProfileKey != other.ProfileKey) return false;
      if (ReadReceipts != other.ReadReceipts) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIdentityKeyPublic) hash ^= IdentityKeyPublic.GetHashCode();
      if (HasIdentityKeyPrivate) hash ^= IdentityKeyPrivate.GetHashCode();
      if (HasNumber) hash ^= Number.GetHashCode();
      if (HasProvisioningCode) hash ^= ProvisioningCode.GetHashCode();
      if (HasUserAgent) hash ^= UserAgent.GetHashCode();
      if (HasProfileKey) hash ^= ProfileKey.GetHashCode();
      if (HasReadReceipts) hash ^= ReadReceipts.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasIdentityKeyPublic) {
        output.WriteRawTag(10);
        output.WriteBytes(IdentityKeyPublic);
      }
      if (HasIdentityKeyPrivate) {
        output.WriteRawTag(18);
        output.WriteBytes(IdentityKeyPrivate);
      }
      if (HasNumber) {
        output.WriteRawTag(26);
        output.WriteString(Number);
      }
      if (HasProvisioningCode) {
        output.WriteRawTag(34);
        output.WriteString(ProvisioningCode);
      }
      if (HasUserAgent) {
        output.WriteRawTag(42);
        output.WriteString(UserAgent);
      }
      if (HasProfileKey) {
        output.WriteRawTag(50);
        output.WriteBytes(ProfileKey);
      }
      if (HasReadReceipts) {
        output.WriteRawTag(56);
        output.WriteBool(ReadReceipts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasIdentityKeyPublic) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(IdentityKeyPublic);
      }
      if (HasIdentityKeyPrivate) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(IdentityKeyPrivate);
      }
      if (HasNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (HasProvisioningCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProvisioningCode);
      }
      if (HasUserAgent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserAgent);
      }
      if (HasProfileKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ProfileKey);
      }
      if (HasReadReceipts) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProvisionMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasIdentityKeyPublic) {
        IdentityKeyPublic = other.IdentityKeyPublic;
      }
      if (other.HasIdentityKeyPrivate) {
        IdentityKeyPrivate = other.IdentityKeyPrivate;
      }
      if (other.HasNumber) {
        Number = other.Number;
      }
      if (other.HasProvisioningCode) {
        ProvisioningCode = other.ProvisioningCode;
      }
      if (other.HasUserAgent) {
        UserAgent = other.UserAgent;
      }
      if (other.HasProfileKey) {
        ProfileKey = other.ProfileKey;
      }
      if (other.HasReadReceipts) {
        ReadReceipts = other.ReadReceipts;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IdentityKeyPublic = input.ReadBytes();
            break;
          }
          case 18: {
            IdentityKeyPrivate = input.ReadBytes();
            break;
          }
          case 26: {
            Number = input.ReadString();
            break;
          }
          case 34: {
            ProvisioningCode = input.ReadString();
            break;
          }
          case 42: {
            UserAgent = input.ReadString();
            break;
          }
          case 50: {
            ProfileKey = input.ReadBytes();
            break;
          }
          case 56: {
            ReadReceipts = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
